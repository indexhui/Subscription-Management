{"version":3,"sources":["theme/theme.js","components/Header.js","components/SubItem.js","components/Subscription.js","components/AddSubscription.js","api/airtableSubscriptions.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["theme","extendTheme","config","initialColorMode","useSystemColorMode","styles","global","body","bg","fontFamily","activeStyle","color","components","Button","baseStyle","fontWeight","borderRadius","letterSpacing","sizes","lg","h","minW","px","Header","props","numOfRemaing","sum","SubItem","sub","id","isEdit","handleDelete","updateIsEdit","handleSave","useState","tempSub","setTempSub","handleChange","e","key","target","name","value","handleKeyDown","event","keyCode","length","boxShadow","padding","justify","alignItems","m","role","position","align","colorScheme","w","lineHeight","textAlign","mr","slice","toUpperCase","onDoubleClick","onChange","onKeyDown","placeholder","size","border","plan","price","display","right","top","_groupHover","direction","py","mt","as","FiTrash2","_hover","onClick","mb","FiEdit3","Subscription","subs","map","fields","AddSubscription","inputValue","handleSubmit","ml","onSubmit","isRequired","type","baseURL","createSubs","payload","a","fetch","method","headers","JSON","stringify","res","json","data","deleteSubs","updateSubs","App","setSubs","setInputValue","useEffect","then","records","fetchSubs","preventDefault","preSubs","prevSubs","pl","arr","forEach","element","isNaN","Number","SumDataforEach","console","log","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.247d9e31.chunk.js","sourcesContent":["// theme.js\r\nimport { extendTheme } from '@chakra-ui/react';\r\n// // Global style overrides\r\n// import styles from \"./styles\"\r\n// // Foundational style overrides\r\n// import borders from \"./foundations/borders\"\r\n// // Component style overrides\r\n// import Button from \"./components/button\"\r\nconst overrides = {\r\n  config: {\r\n    initialColorMode: 'light',\r\n    useSystemColorMode: false,\r\n  },\r\n  initialColorMode: 'light',\r\n  useSystemColorMode: false,\r\n  styles: {\r\n    global: {\r\n      body: {\r\n        bg: 'gray.900',\r\n        // color: \"white\",\r\n        fontFamily: \"'PingFang TC', 微軟正黑體, sans-serif\",\r\n      },\r\n      activeStyle: {\r\n        color: 'red',\r\n      },\r\n    },\r\n  },\r\n  // styles,\r\n  // borders,\r\n  // Other foundational style overrides go here\r\n  components: {\r\n    Button: {\r\n      baseStyle: {\r\n        fontWeight: '300', // Normally, it is \"semibold\"\r\n        borderRadius: 'full',\r\n        letterSpacing: 2,\r\n      },\r\n      sizes: {\r\n        lg: {\r\n          h: 12,\r\n          minW: 12,\r\n          px: 30,\r\n        },\r\n      },\r\n    },\r\n    // Other components go here\r\n  },\r\n};\r\n\r\nconst theme = extendTheme(overrides);\r\nexport default theme;\r\n","import { Box } from '@chakra-ui/react';\r\n\r\nconst Header = props => {\r\n  const { numOfRemaing, sum } = props;\r\n\r\n  return (\r\n    <Box>\r\n      <Box>總共有 {numOfRemaing} 筆訂閱服務</Box>\r\n      <Box>每個月您需花費 {sum}</Box>\r\n      {/* <Box>您已付出</Box>\r\n      <Box>本月尚須付</Box> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Box, Flex, Checkbox, Icon, Input } from '@chakra-ui/react';\r\nimport { useState } from 'react';\r\nimport { FiTrash2, FiEdit3 } from 'react-icons/fi';\r\n\r\nconst SubItem = ({\r\n  sub,\r\n  id,\r\n  isEdit,\r\n  handleDelete,\r\n  updateIsEdit,\r\n  handleSave,\r\n}) => {\r\n  const [tempSub, setTempSub] = useState(sub);\r\n  const handleChange = e => {\r\n    let key = e.target.name;\r\n    let value = e.target.value;\r\n    setTempSub({\r\n      ...tempSub,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleKeyDown = event => {\r\n    // console.log({\r\n    //   keyCode: event.keyCode,\r\n    //   key: event.key,\r\n    // });\r\n\r\n    // keyCode 13 一定是 enter，但 enter 的 keyCode 不一定是 13\r\n    if (event.keyCode === 13 && tempSub.length !== 0) {\r\n      handleSave({\r\n        id: id,\r\n        tempSub,\r\n      });\r\n    }\r\n\r\n    // keyCode 27 是 Escape\r\n    if (event.keyCode === 27) {\r\n      // 取消儲存\r\n      updateIsEdit({\r\n        id: sub.id,\r\n        isEdit: false,\r\n      });\r\n\r\n      // 把 tempTodo 改成修改前的內容\r\n      setTempSub(sub);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      bg=\"white\"\r\n      boxShadow=\"0px 4px 25px rgba(201, 201, 201, 0.5)\"\r\n      padding=\"12px 32px\"\r\n      borderRadius=\"6px\"\r\n      color=\"gray.800\"\r\n      justify=\"space-between\"\r\n      alignItems=\"center\"\r\n      m=\"8px 0\"\r\n      role=\"group\"\r\n      position=\"relative\"\r\n    >\r\n      <Flex align=\"center\">\r\n        <Checkbox colorScheme=\"cyan\">\r\n          <Box\r\n            bg=\"gray.900\"\r\n            color=\"white\"\r\n            w=\"40px\"\r\n            h=\"40px\"\r\n            lineHeight=\"40px\"\r\n            textAlign=\"center\"\r\n            borderRadius=\"2px\"\r\n            mr=\"2\"\r\n          >\r\n            {sub.name && sub.name.slice(0, 1).toUpperCase()}\r\n          </Box>\r\n        </Checkbox>\r\n        <Box>\r\n          <Box onDoubleClick={() => updateIsEdit({ id: id, isEdit: true })}>\r\n            {!isEdit && sub.name}\r\n            {isEdit && (\r\n              <Input\r\n                name=\"name\"\r\n                value={tempSub.name}\r\n                onChange={handleChange}\r\n                onKeyDown={handleKeyDown}\r\n                placeholder=\"edit\"\r\n                size=\"s\"\r\n                border=\"0px\"\r\n                bg=\"gray.100\"\r\n                w=\"80%\"\r\n              />\r\n            )}\r\n          </Box>\r\n          <Box onDoubleClick={() => updateIsEdit({ id: id, isEdit: true })}>\r\n            {!isEdit && sub.plan}\r\n            {isEdit && (\r\n              <Input\r\n                value={tempSub.plan}\r\n                name=\"plan\"\r\n                onChange={handleChange}\r\n                onKeyDown={handleKeyDown}\r\n                placeholder=\"edit\"\r\n                size=\"s\"\r\n                border=\"0px\"\r\n                bg=\"gray.100\"\r\n                w=\"80%\"\r\n              />\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </Flex>\r\n      <Box>\r\n        <Box>\r\n          {!isEdit && sub.price}\r\n          {isEdit && (\r\n            <Input\r\n              value={tempSub.price}\r\n              name=\"price\"\r\n              onChange={handleChange}\r\n              onKeyDown={handleKeyDown}\r\n              placeholder=\"edit\"\r\n              size=\"s\"\r\n              border=\"0px\"\r\n              bg=\"gray.100\"\r\n              w=\"80%\"\r\n            />\r\n          )}\r\n        </Box>\r\n        <Box>/month</Box>\r\n      </Box>\r\n      <Flex\r\n        display=\"none\"\r\n        position=\"absolute\"\r\n        right=\"0\"\r\n        top=\"0\"\r\n        bg=\"white\"\r\n        h=\"100%\"\r\n        w=\"28px\"\r\n        borderRadius=\"6px\"\r\n        color=\"gray.500\"\r\n        boxShadow=\"0px 4px 25px rgba(201, 201, 201, 0.5)\"\r\n        _groupHover={{ display: 'flex' }}\r\n        align=\"center\"\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n      >\r\n        <Box py=\"2px\" mt=\"5px\">\r\n          <Icon\r\n            as={FiTrash2}\r\n            _hover={{ color: 'gray.800' }}\r\n            onClick={handleDelete(id)}\r\n          />\r\n        </Box>\r\n        <Box\r\n          py=\"2px\"\r\n          mb=\"5px\"\r\n          onClick={() => updateIsEdit({ id: id, isEdit: true })}\r\n        >\r\n          <Icon as={FiEdit3} _hover={{ color: 'gray.800' }} py=\"1px\" />\r\n        </Box>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default SubItem;\r\n","import { Box } from '@chakra-ui/react';\r\n\r\nimport SubItem from '../components/SubItem';\r\n\r\nconst Subscription = ({ subs, handleDelete, updateIsEdit, handleSave }) => {\r\n  return (\r\n    <Box>\r\n      {subs &&\r\n        subs.map(sub => (\r\n          <SubItem\r\n            sub={sub.fields}\r\n            isEdit={sub.isEdit}\r\n            id={sub.id}\r\n            key={sub.id}\r\n            handleDelete={handleDelete}\r\n            updateIsEdit={updateIsEdit}\r\n            handleSave={handleSave}\r\n          />\r\n        ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Subscription;\r\n","import { Flex, Button, FormControl, FormLabel, Input } from '@chakra-ui/react';\r\n\r\nconst AddSubscription = ({ inputValue, handleSubmit, handleChange }) => {\r\n  return (\r\n    <Flex\r\n      w=\"45%\"\r\n      bg=\"white\"\r\n      ml=\"20px\"\r\n      borderRadius=\"4px\"\r\n      color=\"gray.700\"\r\n      padding=\"32px\"\r\n      direction=\"column\"\r\n    >\r\n      新增訂閱項目\r\n      <form onSubmit={handleSubmit}>\r\n        <FormControl isRequired>\r\n          <FormLabel>服務名稱</FormLabel>\r\n          <Input\r\n            placeholder=\"服務名稱\"\r\n            onChange={handleChange}\r\n            value={inputValue.name}\r\n            name=\"name\"\r\n          />\r\n        </FormControl>\r\n        <FormControl isRequired>\r\n          <FormLabel>方案</FormLabel>\r\n          <Input\r\n            placeholder=\"方案\"\r\n            name=\"plan\"\r\n            onChange={handleChange}\r\n            value={inputValue.plan}\r\n          />\r\n        </FormControl>\r\n        <FormControl isRequired>\r\n          <FormLabel>金額</FormLabel>\r\n          <Input\r\n            placeholder=\"金額\"\r\n            name=\"price\"\r\n            onChange={handleChange}\r\n            value={inputValue.price}\r\n          />\r\n        </FormControl>\r\n        <Button\r\n          mt={4}\r\n          colorScheme=\"teal\"\r\n          // isLoading={props.isSubmitting}\r\n          type=\"submit\"\r\n        >\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default AddSubscription;\r\n","const apiKey = 'api_key=keyNCBsmapwe9NAJ7';\r\nconst airtableURL =\r\n  'https://api.airtable.com/v0/appAPGGGa6GPLdEdJ/subscription';\r\nconst baseURL =\r\n  'https://api.airtable.com/v0/appAPGGGa6GPLdEdJ/subscription?api_key=keyNCBsmapwe9NAJ7';\r\n\r\nexport const getSubs = () => {\r\n  return fetch(`${baseURL}`).then(res => res.json());\r\n};\r\n\r\n// async\r\nexport const createSubs = async payload => {\r\n  const { name, plan, price } = payload;\r\n  const res = await fetch(`${baseURL}`, {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      fields: {\r\n        plan: plan,\r\n        price: price,\r\n        name: name,\r\n      },\r\n    }),\r\n  });\r\n  const data = await res.json();\r\n  return data;\r\n};\r\n\r\nexport const deleteSubs = async id => {\r\n  const res = await fetch(`${baseURL}&records[]=${id}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n\r\n  const data = await res.json();\r\n  return data;\r\n};\r\n\r\nexport const updateSubs = async payload => {\r\n  const { id, name, plan, price } = payload;\r\n  const res = await fetch(`${airtableURL}/${id}?${apiKey}`, {\r\n    method: 'PATCH',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      fields: {\r\n        plan: plan,\r\n        price: price,\r\n        name: name,\r\n      },\r\n    }),\r\n  });\r\n  const data = await res.json();\r\n  return data;\r\n};\r\n","import React, { useState, useEffect } from 'react';\nimport { ChakraProvider, Flex } from '@chakra-ui/react';\n\nimport theme from './theme/theme.js';\nimport Header from './components/Header';\nimport Subscription from './components/Subscription';\nimport AddSubscription from './components/AddSubscription';\n\nimport {\n  getSubs,\n  createSubs,\n  updateSubs,\n  deleteSubs,\n} from './api/airtableSubscriptions';\n\nfunction App() {\n  const [subs, setSubs] = useState();\n  const [inputValue, setInputValue] = useState({\n    name: '',\n    plan: '',\n    price: '',\n  });\n\n  useEffect(() => {\n    const fetchSubs = async () => {\n      const data = await getSubs();\n      setSubs(data.records);\n    };\n    fetchSubs();\n  }, []);\n\n  const handleChange = e => {\n    let key = e.target.name;\n    let value = e.target.value;\n    setInputValue({\n      ...inputValue,\n      [key]: value,\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const data = await createSubs({\n      name: inputValue.name,\n      plan: inputValue.plan,\n      price: inputValue.price,\n    });\n\n    setSubs(preSubs => {\n      return [...preSubs, data];\n    });\n\n    setInputValue({\n      name: '',\n      plan: '',\n      price: '',\n    });\n  };\n\n  const handleDelete = id => async () => {\n    console.log(id);\n    try {\n      await deleteSubs(id);\n      setSubs(preSubs => preSubs.filter(sub => sub.id !== id));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const updateIsEdit = ({ id, isEdit }) => {\n    // console.log('id', id);\n    setSubs(prevSubs =>\n      prevSubs.map(sub => {\n        // console.log('subId', sub.id);\n        if (sub.id !== id) {\n          // console.log(id, sub.id);\n          return sub;\n        }\n        console.log(id, sub.id);\n        return { ...sub, isEdit };\n      })\n    );\n    console.log(subs);\n  };\n\n  const handleSave = async payload => {\n    const { id, tempSub } = payload;\n\n    await updateSubs({\n      id: id,\n      name: tempSub.name,\n      plan: tempSub.plan,\n      price: tempSub.price,\n    });\n\n    setSubs(prevSubs =>\n      prevSubs.map(sub => {\n        if (sub.id !== id) {\n          return sub;\n        }\n\n        return {\n          ...sub,\n          fields: tempSub,\n          isEdit: false,\n        };\n      })\n    );\n  };\n\n  const numOfRemaing = subs?.length;\n\n  function SumDataforEach(arr) {\n    let sum = 0;\n    arr?.forEach(function (element) {\n      const price = element.fields.price;\n      if (price && !isNaN(price)) {\n        sum += Number(price);\n      }\n    });\n    return sum;\n  }\n\n  return (\n    <ChakraProvider theme={theme}>\n      <Flex\n        // align=\"center\"\n        justify=\"center\"\n        mt=\"20\"\n      >\n        <Flex w=\"760px\">\n          <Flex\n            w=\"55%\"\n            direction=\"column\"\n            bg=\"white\"\n            borderRadius=\"4px\"\n            padding=\"32px\"\n            pl=\"24px\"\n          >\n            <Header\n              sum={subs && SumDataforEach(subs)}\n              numOfRemaing={numOfRemaing}\n            />\n            <Subscription\n              subs={subs}\n              handleDelete={handleDelete}\n              updateIsEdit={updateIsEdit}\n              handleSave={handleSave}\n            />\n          </Flex>\n\n          <AddSubscription\n            inputValue={inputValue}\n            handleSubmit={handleSubmit}\n            handleChange={handleChange}\n          />\n        </Flex>\n      </Flex>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <StrictMode>\n    <div>\n      <ColorModeScript />\n      <App />\n    </div>\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}